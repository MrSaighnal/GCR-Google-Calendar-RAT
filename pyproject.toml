[tool.poetry]
name = "google-calendar-rat"
version = "0.1.0"
description = "Google Calendar Remote Access Tool - Security Research PoC"
authors = ["Security Researcher"]
readme = "README.md"
license = "MIT"
packages = [{include = "gcr.py"}]

[tool.poetry.dependencies]
python = "^3.8"
google-auth = "^2.20.0"
google-api-python-client = "^2.90.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"

[tool.poetry.scripts]
test = "pytest:main"
tests = "pytest:main"

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=gcr",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=0",  # Set to 0 for infrastructure setup, change to 80 for actual development
    "-vv"
]
markers = [
    "unit: marks tests as unit tests (fast, isolated)",
    "integration: marks tests as integration tests (may require external resources)",
    "slow: marks tests as slow running"
]

[tool.coverage.run]
source = ["gcr"]
branch = true
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
fail_under = 0  # Set to 0 for infrastructure setup, change to 80 for actual development
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"